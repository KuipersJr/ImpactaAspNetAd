@model Northwind.Mvc.EF.ViewModels.ProdutoViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "Produto", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Produto</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Produto.Id)

        <div class="form-group">
            @Html.LabelFor(model => model.Produto.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Produto.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Produto.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Produto.Categoria, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Produto.Categoria.Id, new SelectList(Model.Categorias, "Id", "Nome"), "--Selecione--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Produto.Categoria, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Produto.Preco, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Produto.Preco, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Produto.Preco, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Produto.Estoque, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Produto.Estoque, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Produto.Estoque, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Produto.Descontinuado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Produto.Descontinuado)
                    @Html.ValidationMessageFor(model => model.Produto.Descontinuado, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @if (Model.Produto.Imagem != null)
        {
            <div class="form-group">
                <span class="control-label col-md-2"><strong>Imagem atual</strong></span>
                <div class="col-md-10">
                    <img src="~/Imagem?produtoId=@Model.Produto.Id" title="Imagem do produto" />
                </div>
            </div>
        }

        <div class="form-group">
            @Html.Label("Nova imagem", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" id="imagemProduto" name="imagemProduto" />
                @Html.ValidationMessage("imagemProduto", new { @class = "text-danger" })
                <img id="imagemProdutoPreview" src="#" alt="Preview" style="visibility:hidden" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript" src="~/Scripts/apoio/uploadImagem.js"></script>
    <script type="text/javascript">
        uploadImagem.definirPreview("imagemProduto", "imagemProdutoPreview");
    </script>
}
